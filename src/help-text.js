export default {
    flexDirection: "<b>flex-direction</b> sets the direction of the container's main axis and determines the direction in which items will be positioned.<br><b>flex-row</b> means items will be placed in the same manner as inline elements (typically left to right in Latin-based languages).<br><b>flex-column</b> means items will be positioned in the same manner as block elements (typically downwards in Latin-based languages).",
    flexWrap: "<b>flex-wrap</b> determines whether flex items should wrap across multiple lines if they don't fit along the main axis.",
    justifyContent: "justify-content specifies how flex items are distributed along the main axis.<br>flex-start and flex-end place items at the start and end, respectively, of the main axis.<br>center places items in the center.<br>space-around adds equal sized gaps before and after each item.<br>space-between places the first and last item of each line at the start and end of the line and distributes the remaining space evenly.<br>(space-evenly is not part of the spec, but creates an equal size space between the line start and first item, between each item and between the last item and the line end.)",
    alignItems: "align-items specifies how items are aligned about the main-axis. If flex-direction is row, items are aligned vertically within the row. If column, items are aligned horizontally within the column.<br>stretch sizes each item to fill the row (or column)<br>center places each item centrally within the row (or column).<br>flex-start and flex-end place each item at the start and end, respectively, of the cross-axis.<br>baseline aligns the baselines of the items.",
    alignContent: "align-content specifies how rows (or columns) are distributed in the cross-axis direction (if flex-direction is row and flex-wrap is wrap). The options behave in a similar manner to justify-content."
}
